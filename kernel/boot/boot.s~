; ----------------------------------------------------------------
;
;   boot.s -- Kernal Start Here
;
; ----------------------------------------------------------------

; Multiboot
MBOOT_HEADER_MAGIC  equ     0x1BADB002

MBOOT_PAGE_ALIGN    equ     1 << 0

MBOOT_MEM_INFO      equ     1 << 1    

; Define the signature of multiboot we use
MBOOT_HEADER_FLAGS  equ     MBOOT_PAGE_ALIGN | MBOOT_MEM_INFO


[BITS 32]   
section .text   

; Signature that fits the multiboot specification 

dd MBOOT_HEADER_MAGIC   
dd MBOOT_HEADER_FLAGS  
dd MBOOT_CHECKSUM       

[GLOBAL start]      
[GLOBAL glb_mboot_ptr]  
[EXTERN kern_entry]     

start:
    cli              
                 
    mov esp, STACK_TOP       ; set the address of kernel stack
    mov ebp, 0       ; set pointer to frame to 0
    and esp, 0FFFFFFF0H  
    mov [glb_mboot_ptr], ebx 
    call kern_entry      
stop:
    hlt              
    jmp stop         

;-----------------------------------------------------------------------------

section .bss             
stack:
    resb 32768      
glb_mboot_ptr:           
    resb 4

STACK_TOP equ $-stack-1      

;-----------------------------------------------------------------------------
